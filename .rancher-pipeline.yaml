---
stages:
- name: "Build and push docker image"
  steps:
  - env:
      PLUGIN_BUILD_ARGS: "--progress=tty --network=host"
      PLUGIN_DEBUG: true
      PLUGIN_INSECURE: true
      PLUGIN_MIRROR: "https://harbor-demo.iiidevops.org"
      PLUGIN_MTU: 1000
    publishImageConfig:
      dockerfilePath: "./Dockerfile"
      buildContext: "."
      tag: "${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:latest"
      pushRemote: true
      registry: "harbor-demo.iiidevops.org"
    when:
      branch:
        include:
        - "master"
        - "develop"
- name: "Checkmarx source code scan"
  steps:
  - applyAppConfig:
      catalogTemplate: "cattle-global-data:iii-dev-charts3-scan-checkmarx"
      version: "0.1.0"
      name: "${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx"
      targetNamespace: "${CICD_GIT_REPO_NAME}"
      answers:
        git.branch: "${CICD_GIT_BRANCH}"
        git.commitID: "${CICD_GIT_COMMIT}"
        git.repoName: "${CICD_GIT_REPO_NAME}"
        git.url: "${CICD_GIT_URL}"
        pipeline.sequence: "${CICD_EXECUTION_SEQUENCE}"
    when:
      branch:
        include:
        - "master"
        - "checkmarx"
- name: "Deploy db"
  steps:
  - applyAppConfig:
      catalogTemplate: "cattle-global-data:iii-dev-charts3-db"
      version: "0.3.0"
      name: "${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-db"
      targetNamespace: "${CICD_GIT_REPO_NAME}"
      answers:
        db.gui: true
        db.name: "my_db"
        db.password: "templatePassword"
        db.tag: "13.2.0"
        db.type: "postgresql"
        db.username: "iiidevops"
        git.branch: "${CICD_GIT_BRANCH}"
        git.commitID: "${CICD_GIT_COMMIT}"
        git.repoName: "${CICD_GIT_REPO_NAME}"
        git.url: "${CICD_GIT_URL}"
    when:
      branch:
        include:
        - "master"
        - "develop"
- name: "Wait db deployment"
  steps:
  - runScriptConfig:
      image: "iiiorg/deployment-waiter:0.0.2"
      shellScript: "rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;\n\
        bash /app/run.sh;"
    env:
      deploy_name: "${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-db"
      max_wait: 128
      namespace: "${CICD_GIT_REPO_NAME}"
    when:
      branch:
        include:
        - "master"
        - "develop"
    envFrom:
    - sourceKey: "API_TOKEN"
      sourceName: "pipeline-api-key"
      targetKey: "rancher_api_token"
    - sourceKey: "rancher-url"
      sourceName: "rancher"
      targetKey: "rancher_url"
